services:
  # POSTGRES
  postgres:
    container_name: postgres_container
    image: postgres:16.2
    command:
      - "postgres"
      - "-c"
      # ? (default === 100)
      - "max_connections=50"
      - "-c"
      # 15-25% of total RAM
      - "shared_buffers=500MB"
      - "-c"
      # 50% of total RAM
      - "effective_cache_size=1000MB"
      - "-c"
      # Total RAM * 0.25 / max_connections
      - "work_mem=10MB"
      - "-c"
      # Total RAM * 0.05
      - "maintenance_work_mem=100MB"
      - "-c"
      # HDD = 2 | SSD = 1.1-1.3 | NVME === ?
      - "random_page_cost=1.1"
      - "-c"
      # ? (default === -1)
      - "temp_file_limit=4GB"
    volumes:
      # initialization of existing db is possible only when postgres-data folder is not yet created
      - ./db/task.sql:/docker-entrypoint-initdb.d/task.sql
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./db/.env.postgres
    ports:
      - '5434:5432'
    restart: unless-stopped
    networks:
      network:
        ipv4_address: 192.168.240.2
    # ?
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d task"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # BACKEND
  backend:
    container_name: backend_container
    build:
      no_cache: true
      context: ./backend
      dockerfile: Dockerfile
    image: backend:1.0
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
      - ./backend/.env.override
    ports:
      - '3001:3001'
    restart: unless-stopped
    networks:
      network:
        ipv4_address: 192.168.240.3

  # FRONTEND
  frontend:
    container_name: frontend_container
    build:
      no_cache: true
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:1.0
    stdin_open: true
    tty: true
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
      - ./frontend/.env.override
    ports:
      - '3000:3000'
    restart: unless-stopped
    networks:
      network:
        ipv4_address: 192.168.240.4

#
networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.240.0/24
          gateway: 192.168.240.1

#
volumes:
  postgres-data:
  backend-data: